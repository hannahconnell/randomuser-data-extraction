# -*- coding: utf-8 -*-
"""Coding-Assessment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k8eHaggUYsBfjqLI2sDBMnFVo54j5Gpv
"""

import requests
import pandas as pd
import json
import duckdb
RU_URL = 'https://randomuser.me/api/'
GENDERIZE_URL = 'https://api.genderize.io'
API_KEY= '36b8d57defd066963ad04d9625c76613'

# Gather 250 user objects from RandomUser
response = requests.get(RU_URL, params ={'results': 250})
data = response.json()
df = pd.json_normalize(data['results'])

# Send list of names from RandomUser to Genderize, while taking advantage of Genderize's batch processing
gender_predictions = []
name_list = df['name.first'].tolist()
BATCH_SIZE = 10
for i in range(0, len(name_list), BATCH_SIZE):
  batch = name_list[i:i+BATCH_SIZE]
  params = [("name[]", name) for name in batch]
  params.append(("apikey", API_KEY))

  gender_response = requests.get(GENDERIZE_URL, params=params)
  gender_predictions.extend(gender_response.json())

gender_df = pd.DataFrame(gender_predictions)

# Merge gender_df to existing df and remove redundant name column
df = df.merge(gender_df, how="left", left_on="name.first", right_on="name")
df.drop(columns=["name"])

# First query: What percentage of genders are correctly predicted?
duckdb.sql(
    "SELECT (SUM(CASE WHEN gender_x = gender_y THEN 1 ELSE 0 END) * 100.00 / COUNT(*)) AS pct_correct FROM df"
    )

# Second query: On average, which gender is predicted more accurately?
duckdb.sql(
    "SELECT AVG(CASE WHEN (gender_x = gender_y AND gender_x = 'male') THEN 1 ELSE 0 END) AS Male, AVG(CASE WHEN (gender_x = gender_y AND gender_x = 'female') THEN 1 ELSE 0 END) AS Female FROM df"
    )

# Third query: What are the 5 names with the lowest probability score?
duckdb.sql(
    "SELECT name FROM df ORDER BY probability ASC LIMIT 5"
    )

# Fourth query: How many instances are there where the probability is lower than average, and the number of rows searched is higher than average?
duckdb.sql(
    "WITH avgs AS (SELECT AVG(probability) AS avg_probability, AVG(count) AS avg_rows FROM df) SELECT name, probability, count FROM df, avgs WHERE df.probability < avgs.avg_probability AND df.count > avgs.avg_rows"
)

# Fifth query: Which gender is harder to predict?
duckdb.sql("WITH avgs AS (SELECT AVG(probability) AS avg_probability FROM df) SELECT SUM(CASE WHEN(gender_x = 'male') THEN 1 ELSE 0 END) AS Male, SUM(CASE WHEN(gender_x = 'female') THEN 1 ELSE 0 END) AS Female FROM df, avgs WHERE df.probability < avgs.avg_probability")

